// firebase.js
import { initializeApp } from 'firebase/app';
import { getAuth } from 'firebase/auth';

// Your Firebase configuration object
const firebaseConfig = {
  apiKey: process.env.REACT_APP_API_KEY,
  authDomain: process.env.REACT_APP_AUTH_DOMAIN,
  projectId: process.env.REACT_APP_PROJECT_ID,
  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,
  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,
  appId: process.env.REACT_APP_APP_ID,
  measurementId: process.env.REACT_APP_MEASUREMENT_ID
};

// Initialize Firebase
const app = initializeApp(firebaseConfig);

// Get an instance of Firebase Auth
const auth = getAuth(app);

export { auth };

/////////////////////////////////////////////////////////////////////////////

import React, { useState, useEffect } from 'react';
import './user.css'; // Import the CSS file
import { useNavigate } from 'react-router-dom';
import { auth } from '../firebase';
import { onAuthStateChanged, signOut } from 'firebase/auth';

function User() {
  const [user, setUser] = useState(null); // Initialize with null
  const navigate = useNavigate();

  useEffect(() => {
    const unsubscribe = onAuthStateChanged(auth, (currentUser) => {
      if (currentUser) {
        setUser(currentUser);
      } else {
        navigate("/Login"); // Redirect to login if no user
      }
    });

    return () => unsubscribe(); // Cleanup the listener on component unmount
  }, [navigate]);

  const handleSignOut = async () => {
    try {
      await signOut(auth);
      navigate("/Login"); // Redirect to login after signing out
    } catch (error) {
      console.error("Error signing out:", error.message);
    }
  };

  return (
    <div>
      <div className="container">
        <h1>Welcome {user ? user.email : 'Guest'}</h1>
        <button onClick={handleSignOut}>Sign Out</button>
        {/* Add more user details here */}
      </div>
    </div>
  );
}

export default User;
